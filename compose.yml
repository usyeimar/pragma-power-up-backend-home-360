version: '3.8'

services:
  service-gateway:
    build:
      context: ./service-gateway
    container_name: service-gateway
    ports:
      - "${SERVER_PORT_API_GATEWAY}:${SERVER_PORT_API_GATEWAY}"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SERVER_PORT: ${SERVER_PORT_API_GATEWAY}
      APP_JWT_SECRET: ${APP_JWT_SECRET}
      APP_JWT_ISSUER_URI: ${APP_JWT_ISSUER_URI}
    depends_on:
      service-discovery:
        condition: service_started
      service-user:
        condition: service_healthy
      service-home:
        condition: service_started
      service-visits:
        condition: service_started
      service-transactions:
        condition: service_started
    networks:
      - microservices-net

  service-discovery:
    build:
      context: ./service-discovery
    container_name: service-discovery
    ports:
      - "${SERVICE_DISCOVERY_PORT}:${SERVICE_DISCOVERY_PORT}"
    environment:
      SERVER_PORT: ${SERVICE_DISCOVERY_PORT}
    networks:
      - microservices-net

  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql-db-data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "${MYSQL_DB_PORT}:3306"
    networks:
      - microservices-net
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "${PHPMYADMIN_PORT}:80" # Mapea el puerto 80 del contenedor al puerto que elijas en el host
    environment:
      PMA_HOST: mysql-db # Nombre del servicio del contenedor MySQL
      PMA_PORT: 3306 # Puerto interno de MySQL
      PMA_USER: ${MYSQL_USER} # Opcional: usuario por defecto para login
      PMA_PASSWORD: ${MYSQL_PASSWORD} # Opcional: contraseña por defecto para login
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # Necesario si quieres iniciar sesión como root
      # PMA_ARBITRARY: 1 # Descomenta esto si quieres poder conectarte a cualquier servidor desde la UI de phpMyAdmin
    networks:
      - microservices-net
    depends_on:
      mysql-db:
        condition: service_healthy
    restart: unless-stopped


  service-user:
    build:
      context: ./service-user
    container_name: service-user
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SPRING_DATASOURCE_URL: ${DB_USER_SERVICE_URL_MYSQL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${MYSQL_DRIVER_CLASS_NAME}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SERVER_PORT: ${SERVER_PORT_SERVICE_USER}
      APP_JWT_SECRET: ${APP_JWT_SECRET}
      APP_JWT_EXPIRATION_MS: ${APP_JWT_EXPIRATION_MS}
      APP_JWT_ISSUER_URI: ${APP_JWT_ISSUER_URI}
      DEFAULT_USER_EMAIL: ${DEFAULT_USER_EMAIL}
      DEFAULT_USER_PASSWORD: ${DEFAULT_USER_PASSWORD}
      DEFAULT_USER_FIRSTNAME: ${DEFAULT_USER_FIRSTNAME}
      DEFAULT_USER_LASTNAME: ${DEFAULT_USER_LASTNAME}
      DEFAULT_USER_DOCUMENTID: ${DEFAULT_USER_DOCUMENTID}
      DEFAULT_USER_PHONENUMBER: ${DEFAULT_USER_PHONENUMBER}
    depends_on:
      service-discovery:
        condition: service_started
      mysql-db:
        condition: service_healthy
    networks:
      - microservices-net
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --tries=1 --spider http://localhost:${SERVER_PORT_SERVICE_USER:-8081}/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s


  service-home:
    build:
      context: ./service-home
    container_name: service-home
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SPRING_DATASOURCE_URL: ${DB_HOME_SERVICE_URL_MYSQL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${MYSQL_DRIVER_CLASS_NAME}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SERVER_PORT: ${SERVER_PORT_SERVICE_HOME}
    depends_on:
      service-discovery:
        condition: service_started
      mysql-db:
        condition: service_healthy
    networks:
      - microservices-net
    volumes:
      - ./uploads:/app/uploads

  service-visits:
    build:
      context: ./service-visits
    container_name: service-visits
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SPRING_DATASOURCE_URL: ${DB_VISITS_SERVICE_URL_MYSQL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${MYSQL_DRIVER_CLASS_NAME}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SERVER_PORT: ${SERVER_PORT_SERVICE_VISITS}
    depends_on:
      service-discovery:
        condition: service_started
      mysql-db:
        condition: service_healthy
    networks:
      - microservices-net

  service-transactions:
    build:
      context: ./service-transactions
    container_name: service-transactions
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SPRING_DATASOURCE_URL: ${DB_TRANSACTIONS_SERVICE_URL_MYSQL} # Tomado de .env
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${MYSQL_DRIVER_CLASS_NAME}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SERVER_PORT: ${SERVER_PORT_SERVICE_TRANSACTIONS}
    depends_on:
      service-discovery:
        condition: service_started
      mysql-db:
        condition: service_healthy
    networks:
      - microservices-net

volumes:
  mysql-db-data:
  bytebase-data:

networks:
  microservices-net:
    driver: bridge
